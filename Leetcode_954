#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>

#define OFFSET 200000  // shift index to handle negatives
#define SIZE 400001    // size must be large enough for 2 * 10^5 both sides

int compare(const void* a, const void* b) {
    int x = *(int*)a;
    int y = *(int*)b;
    return abs(x) - abs(y);
}

bool canReorderDoubled(int* arr, int arrSize) {
    int count[SIZE];
    memset(count, 0, sizeof(count));

    // count frequency of elements
    for (int i = 0; i < arrSize; i++) {
        count[arr[i] + OFFSET]++;
    }

    // sort array by absolute value
    qsort(arr, arrSize, sizeof(int), compare);

    for (int i = 0; i < arrSize; i++) {
        int num = arr[i];
        int mappedIndex = num + OFFSET;
        if (count[mappedIndex] == 0)
            continue;

        int doubleVal = 2 * num;
        int doubleIndex = doubleVal + OFFSET;

        if (doubleIndex < 0 || doubleIndex >= SIZE || count[doubleIndex] < count[mappedIndex]) {
            return false;
        }

        count[doubleIndex] -= count[mappedIndex];
        count[mappedIndex] = 0;
    }

    return true;
}
