#include <stdlib.h>

int* applyOperations(int* nums, int numsSize, int* returnSize) {
    int* result = (int*)malloc(numsSize * sizeof(int));
    if (result == NULL) {
        *returnSize = 0;
        return NULL;
    }

    // Step 1: Perform adjacent equal element check and doubling
    for (int i = 0; i < numsSize - 1; ++i) {
        if (nums[i] == nums[i + 1]) {
            nums[i] *= 2;
            nums[i + 1] = 0;
        }
    }

    // Step 2: Move all zeros to the end
    int nonZeroIndex = 0;
    for (int i = 0; i < numsSize; ++i) {
        if (nums[i] != 0) {
            result[nonZeroIndex++] = nums[i];
        }
    }
    for (int i = nonZeroIndex; i < numsSize; ++i) {
        result[i] = 0;
    }

    *returnSize = numsSize;
    return result;
}
