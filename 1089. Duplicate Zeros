void duplicateZeros(int* arr, int arrSize) {
    int possibleDups = 0;
    int last = arrSize - 1;

    // Step 1: Count zeros that can be duplicated
    for (int i = 0; i <= last - possibleDups; i++) {
        if (arr[i] == 0) {
            // Edge case: if adding this zero exactly fills the array
            if (i == last - possibleDups) {
                arr[last] = 0;
                last--;
                break;
            }
            possibleDups++;
        }
    }

    // Step 2: Start backwards and shift
    int i = last - possibleDups;
    for (; i >= 0; i--) {
        if (arr[i] == 0) {
            arr[i + possibleDups] = 0;
            possibleDups--;
            arr[i + possibleDups] = 0;
        } else {
            arr[i + possibleDups] = arr[i];
        }

       
    }
}

