#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char* addBinary(char* a, char* b) {
    int lenA = strlen(a);
    int lenB = strlen(b);
    int maxLen = lenA > lenB ? lenA : lenB;

    // Result string (maxLen + 2 for possible carry and null terminator)
    char* result = (char*)malloc(maxLen + 2);
    result[maxLen + 1] = '\0'; // null-terminator

    int i = lenA - 1, j = lenB - 1, k = maxLen, carry = 0;

    while (i >= 0 || j >= 0 || carry) {
        int bitA = i >= 0 ? a[i--] - '0' : 0;
        int bitB = j >= 0 ? b[j--] - '0' : 0;
        int sum = bitA + bitB + carry;

        result[k--] = (sum % 2) + '0';
        carry = sum / 2;
    }

    // If there's leftover space in front, move the pointer
    return result + k + 1;
}
